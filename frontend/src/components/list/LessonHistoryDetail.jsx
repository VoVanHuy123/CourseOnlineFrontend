import React, { useEffect, useState } from "react";
import { Descriptions, Divider, Spin,Typography } from "antd";
import { useParams } from "react-router-dom";
import useFetchApi from "../../hooks/useFetchApi";
import { endpoints } from "../../services/api";
// import Title from "antd/es/skeleton/Title";
const { Title, Text, Paragraph } = Typography;

const LessonHistoryDetail = ({historyId}) => {
//   const { lessonId, historyId } = useParams();
  const [history, setHistory] = useState(null);
  const [loading, setLoading] = useState(false);
  const {fetchApi} = useFetchApi();

  useEffect(() => {
    const fetchDetail = async () => {
      setLoading(true);
      
      try {
        const res = await fetchApi({
            url : endpoints['lesson_history'](historyId)
        })

        setHistory(res.data);
        console.error(res.data);
      } catch (err) {
        console.error(err);
      }
      setLoading(false);
    };
    fetchDetail();
  }, [ historyId]);

   return (
    <div className="p-4 bg-white rounded shadow-md">
      <Title level={3}>Chi ti·∫øt l·ªãch s·ª≠ b√†i h·ªçc</Title>
      <Divider />

      <Descriptions bordered column={1}>
        <Descriptions.Item label="Ti√™u ƒë·ªÅ">{history?.title}</Descriptions.Item>
        <Descriptions.Item label="H√†nh ƒë·ªông">
          {history?.action === "create" ? "T·∫°o m·ªõi" : "C·∫≠p nh·∫≠t"}
        </Descriptions.Item>
        <Descriptions.Item label="M√¥ t·∫£">
          <Paragraph>{history?.description || "Kh√¥ng c√≥ m√¥ t·∫£"}</Paragraph>
        </Descriptions.Item>
        <Descriptions.Item label="Lo·∫°i n·ªôi dung">{history?.type}</Descriptions.Item>
        <Descriptions.Item label="ƒê∆∞·ªùng d·∫´n n·ªôi dung">
          <a href={history?.content_url} target="_blank" rel="noreferrer">
            {history?.content_url}
          </a>
        </Descriptions.Item>
        <Descriptions.Item label="Th·ª© t·ª±">{history?.order}</Descriptions.Item>
        <Descriptions.Item label="ƒê√£ c√¥ng khai?">
          {history?.is_published ? "‚úÖ C√≥" : "‚ùå Kh√¥ng"}
        </Descriptions.Item>
        <Descriptions.Item label="B·ªã kh√≥a?">
          {history?.is_locked ? "üîí C√≥" : "üîì Kh√¥ng"}
        </Descriptions.Item>
        <Descriptions.Item label="Ng√†y t·∫°o">
          {new Date(history?.created_at).toLocaleString()}
        </Descriptions.Item>
      </Descriptions>

      {history?.image && (
        <div className="mt-4">
          <Text strong>H√¨nh ·∫£nh:</Text>
          <div className="mt-2">
            <img
              src={history?.image}
              alt="H√¨nh ·∫£nh b√†i h·ªçc"
              className="w-64 rounded border"
            />
          </div>
        </div>
      )}
    </div>
  );
};

export default LessonHistoryDetail;
